app:
  clientUrl: ${CLIENT_URL}  # URL фронтенда, задаётся через переменные окружения

spring:
  application:
    name: HIO

  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    driverClassName: org.postgresql.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    initialization-mode: always
    continue-on-error: true
    hikari:
      maximum-pool-size: 10

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true

  servlet:
    multipart:
      max-file-size: 2MB
      max-request-size: 2MB
      enabled: true

  mvc:
    throw-exception-if-no-handler-found: true
    web:
      resources:
        add-mappings: false

  resources:
    static-locations: classpath:/static/

server:
  port: ${PORT:8080}  # важно! Порт для запуска сервера из переменной окружения PORT или 8080 по умолчанию

logging:
  level:
    org:
      springframework:
        security: DEBUG
        web: DEBUG

token:
  signing:
    key: ${TOKEN_SIGNING_KEY}  # Задайте этот ключ через переменные окружения

upload:
  dir: /tmp/uploads  # В Render и Railway обычно можно писать только сюда

imgur:
  client-id: ${IMGUR_CLIENT_ID}  # Тоже через переменные окружения
